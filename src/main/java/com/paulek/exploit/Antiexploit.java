package com.paulek.exploit;

import com.paulek.exploit.loaders.ConfigLoader;
import com.paulek.exploit.packetlisteners.PacketListener;
import com.paulek.exploit.listeners.AsyncPlayerPreLoginListener;
import com.paulek.exploit.listeners.PlayerItemHeldListener;
import com.paulek.exploit.listeners.PluginMessageReceivedListeners;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.java.JavaPlugin;

public class Antiexploit extends JavaPlugin {

    private static Plugin plugin;

    @Override
    public void onEnable(){
        plugin = this;

        saveDefaultConfig();

//        StringBuilder sb = new StringBuilder();
//
//        sb.append("http://s28.infhost.pl/system/paulekguard.php?licence=");
//        sb.append(this.getConfig().getString("licence"));
//
//        try {
//
//            URL url = new URL(sb.toString());
//
//            BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()));
//
//            JsonParser parser = new JsonParser();
//
//            JsonObject json = (JsonObject) parser.parse(br.readLine());
//
//            if(!json.get("active").getAsBoolean()){
//                this.getPluginLoader().disablePlugin(this);
//                this.getLogger().warning("There was a problem with the license. Report this by email: pawel.krzysztof.fortuna@outlook.com");
//                return;
//            }
//
//
//
//        } catch (Exception e){
//            e.printStackTrace();
//            this.getPluginLoader().disablePlugin(this);
//            this.getLogger().warning("There was a problem with the license. Report this by email: pawel.krzysztof.fortuna@outlook.com");
//            return;
//        }

        new ConfigLoader();

        this.getServer().getMessenger().registerIncomingPluginChannel(this, "wdl:init", new PluginMessageReceivedListeners());
        this.getServer().getMessenger().registerOutgoingPluginChannel(this, "wdl:control");

        this.getServer().getPluginManager().registerEvents(new AsyncPlayerPreLoginListener(), this);

        this.getServer().getPluginManager().registerEvents(new PacketListener(), this);

        this.getServer().getPluginManager().registerEvents(new PlayerItemHeldListener(), this);

        PacketListener.globalStart();

        this.getLogger().info("Plugin loaded! Server is now safe");

    }

    @Override
    public void onDisable(){

        PacketListener.globalStop();

        getPlugin().getLogger().warning("Plugin unloaded! Server is now unsafe");

    }

    public static Plugin getPlugin() {
        return plugin;
    }
}
